import time
from functools import wraps

def LoggerDecorator(func):
    @wraps(func)
    def wrapper(*args, **kwargs):
        start_time = time.time()
        result = func(*args, **kwargs)
        end_time = time.time()

        print(f"Вызов функции {func.__name__}")
        print(f"Аргументы: {args}, {kwargs}")
        print(f"Результат: {result}")
        print(f"Время выполнения: {end_time - start_time} секунд")
        
        return result

    return wrapper

@LoggerDecorator
def complex_algorithm(arg1, arg2):
    # Здесь выполняется “сложный” алгоритм
    result = 0
    for i in range(arg1):
        for j in range(arg2):
            with open('test.txt', 'w', encoding='utf8') as file:
                file.write(str(i + j))
                result += i + j
    # Можете попробовать вынести создание файла из циклов и проверить, сколько времени алгоритм будет работать в этом случае
    return result

result = complex_algorithm(10, 50)
